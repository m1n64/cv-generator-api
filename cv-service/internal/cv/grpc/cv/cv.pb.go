// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v4.24.4
// source: cv.proto

package cv

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Запрос для создания резюме
type CreateCVRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                   // Имя резюме
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // ID пользователя
}

func (x *CreateCVRequest) Reset() {
	*x = CreateCVRequest{}
	mi := &file_cv_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCVRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCVRequest) ProtoMessage() {}

func (x *CreateCVRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cv_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCVRequest.ProtoReflect.Descriptor instead.
func (*CreateCVRequest) Descriptor() ([]byte, []int) {
	return file_cv_proto_rawDescGZIP(), []int{0}
}

func (x *CreateCVRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateCVRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// Запрос для получения всех резюме пользователя
type GetAllCVsByUserIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // ID пользователя
}

func (x *GetAllCVsByUserIDRequest) Reset() {
	*x = GetAllCVsByUserIDRequest{}
	mi := &file_cv_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllCVsByUserIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllCVsByUserIDRequest) ProtoMessage() {}

func (x *GetAllCVsByUserIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cv_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllCVsByUserIDRequest.ProtoReflect.Descriptor instead.
func (*GetAllCVsByUserIDRequest) Descriptor() ([]byte, []int) {
	return file_cv_proto_rawDescGZIP(), []int{1}
}

func (x *GetAllCVsByUserIDRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// Ответ с информацией обо всех резюме
type GetAllCVsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CvList []*CV `protobuf:"bytes,1,rep,name=cv_list,json=cvList,proto3" json:"cv_list,omitempty"`
}

func (x *GetAllCVsResponse) Reset() {
	*x = GetAllCVsResponse{}
	mi := &file_cv_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllCVsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllCVsResponse) ProtoMessage() {}

func (x *GetAllCVsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cv_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllCVsResponse.ProtoReflect.Descriptor instead.
func (*GetAllCVsResponse) Descriptor() ([]byte, []int) {
	return file_cv_proto_rawDescGZIP(), []int{2}
}

func (x *GetAllCVsResponse) GetCvList() []*CV {
	if x != nil {
		return x.CvList
	}
	return nil
}

// Запрос для получения резюме по ID
type GetCVByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CvId string `protobuf:"bytes,1,opt,name=cv_id,json=cvId,proto3" json:"cv_id,omitempty"` // ID резюме
}

func (x *GetCVByIDRequest) Reset() {
	*x = GetCVByIDRequest{}
	mi := &file_cv_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCVByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCVByIDRequest) ProtoMessage() {}

func (x *GetCVByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cv_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCVByIDRequest.ProtoReflect.Descriptor instead.
func (*GetCVByIDRequest) Descriptor() ([]byte, []int) {
	return file_cv_proto_rawDescGZIP(), []int{3}
}

func (x *GetCVByIDRequest) GetCvId() string {
	if x != nil {
		return x.CvId
	}
	return ""
}

// Запрос для удаления резюме
type DeleteCVByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CvId string `protobuf:"bytes,1,opt,name=cv_id,json=cvId,proto3" json:"cv_id,omitempty"` // ID резюме
}

func (x *DeleteCVByIDRequest) Reset() {
	*x = DeleteCVByIDRequest{}
	mi := &file_cv_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCVByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCVByIDRequest) ProtoMessage() {}

func (x *DeleteCVByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cv_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCVByIDRequest.ProtoReflect.Descriptor instead.
func (*DeleteCVByIDRequest) Descriptor() ([]byte, []int) {
	return file_cv_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteCVByIDRequest) GetCvId() string {
	if x != nil {
		return x.CvId
	}
	return ""
}

// Ответ на удаление резюме
type DeleteCVByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *DeleteCVByIDResponse) Reset() {
	*x = DeleteCVByIDResponse{}
	mi := &file_cv_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCVByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCVByIDResponse) ProtoMessage() {}

func (x *DeleteCVByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cv_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCVByIDResponse.ProtoReflect.Descriptor instead.
func (*DeleteCVByIDResponse) Descriptor() ([]byte, []int) {
	return file_cv_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteCVByIDResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// Запрос для редактирования резюме
type UpdateCVRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CvId string `protobuf:"bytes,1,opt,name=cv_id,json=cvId,proto3" json:"cv_id,omitempty"` // ID резюме
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`             // Новое имя резюме
}

func (x *UpdateCVRequest) Reset() {
	*x = UpdateCVRequest{}
	mi := &file_cv_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCVRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCVRequest) ProtoMessage() {}

func (x *UpdateCVRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cv_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCVRequest.ProtoReflect.Descriptor instead.
func (*UpdateCVRequest) Descriptor() ([]byte, []int) {
	return file_cv_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateCVRequest) GetCvId() string {
	if x != nil {
		return x.CvId
	}
	return ""
}

func (x *UpdateCVRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Ответ с информацией о резюме
type CVResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                   // ID резюме
	ExternalId string `protobuf:"bytes,2,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"` // External ID резюме
	Name       string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`                               // Имя резюме
	CreatedAt  string `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`    // Дата создания
}

func (x *CVResponse) Reset() {
	*x = CVResponse{}
	mi := &file_cv_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CVResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CVResponse) ProtoMessage() {}

func (x *CVResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cv_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CVResponse.ProtoReflect.Descriptor instead.
func (*CVResponse) Descriptor() ([]byte, []int) {
	return file_cv_proto_rawDescGZIP(), []int{7}
}

func (x *CVResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CVResponse) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

func (x *CVResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CVResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

// Структура для представления резюме
type CV struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                   // ID резюме
	ExternalId string `protobuf:"bytes,2,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"` // External ID резюме
	Name       string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`                               // Имя резюме
	CreatedAt  string `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`    // Дата создания
}

func (x *CV) Reset() {
	*x = CV{}
	mi := &file_cv_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CV) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CV) ProtoMessage() {}

func (x *CV) ProtoReflect() protoreflect.Message {
	mi := &file_cv_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CV.ProtoReflect.Descriptor instead.
func (*CV) Descriptor() ([]byte, []int) {
	return file_cv_proto_rawDescGZIP(), []int{8}
}

func (x *CV) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CV) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

func (x *CV) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CV) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type GetOriginalIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CvId   string `protobuf:"bytes,1,opt,name=cv_id,json=cvId,proto3" json:"cv_id,omitempty"`       // External ID
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // ID пользователя
}

func (x *GetOriginalIDRequest) Reset() {
	*x = GetOriginalIDRequest{}
	mi := &file_cv_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOriginalIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOriginalIDRequest) ProtoMessage() {}

func (x *GetOriginalIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cv_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOriginalIDRequest.ProtoReflect.Descriptor instead.
func (*GetOriginalIDRequest) Descriptor() ([]byte, []int) {
	return file_cv_proto_rawDescGZIP(), []int{9}
}

func (x *GetOriginalIDRequest) GetCvId() string {
	if x != nil {
		return x.CvId
	}
	return ""
}

func (x *GetOriginalIDRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetOriginalIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // ID
}

func (x *GetOriginalIDResponse) Reset() {
	*x = GetOriginalIDResponse{}
	mi := &file_cv_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOriginalIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOriginalIDResponse) ProtoMessage() {}

func (x *GetOriginalIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cv_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOriginalIDResponse.ProtoReflect.Descriptor instead.
func (*GetOriginalIDResponse) Descriptor() ([]byte, []int) {
	return file_cv_proto_rawDescGZIP(), []int{10}
}

func (x *GetOriginalIDResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_cv_proto protoreflect.FileDescriptor

var file_cv_proto_rawDesc = []byte{
	0x0a, 0x08, 0x63, 0x76, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x63, 0x76, 0x22, 0x3e,
	0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x56, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x33,
	0x0a, 0x18, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x56, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x34, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x56, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x07, 0x63, 0x76, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x63, 0x76, 0x2e, 0x43,
	0x56, 0x52, 0x06, 0x63, 0x76, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x27, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x43, 0x56, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x13, 0x0a,
	0x05, 0x63, 0x76, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x76,
	0x49, 0x64, 0x22, 0x2a, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x56, 0x42, 0x79,
	0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x13, 0x0a, 0x05, 0x63, 0x76, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x76, 0x49, 0x64, 0x22, 0x30,
	0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x56, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x22, 0x3a, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x56, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x13, 0x0a, 0x05, 0x63, 0x76, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x76, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x70, 0x0a, 0x0a,
	0x43, 0x56, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x68,
	0x0a, 0x02, 0x43, 0x56, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x44, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x13, 0x0a, 0x05, 0x63, 0x76, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x76, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x27,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x49, 0x44, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x32, 0xf3, 0x02, 0x0a, 0x09, 0x43, 0x56, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2f, 0x0a, 0x08, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43,
	0x56, 0x12, 0x13, 0x2e, 0x63, 0x76, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x56, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x63, 0x76, 0x2e, 0x43, 0x56, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x43, 0x56, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x2e, 0x63, 0x76,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x56, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x63, 0x76, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x56, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x31, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x43, 0x56, 0x42, 0x79, 0x49, 0x44, 0x12, 0x14, 0x2e,
	0x63, 0x76, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x56, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x63, 0x76, 0x2e, 0x43, 0x56, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x56, 0x42,
	0x79, 0x49, 0x44, 0x12, 0x17, 0x2e, 0x63, 0x76, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x56, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x63,
	0x76, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x56, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x56, 0x12, 0x13, 0x2e, 0x63, 0x76, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x56,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x63, 0x76, 0x2e, 0x43, 0x56, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x49, 0x44, 0x12, 0x18, 0x2e, 0x63, 0x76, 0x2e, 0x47, 0x65,
	0x74, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x19, 0x2e, 0x63, 0x76, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x61, 0x6c, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x1a, 0x5a,
	0x18, 0x2e, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x63, 0x76, 0x2f, 0x67,
	0x72, 0x70, 0x63, 0x2f, 0x63, 0x76, 0x3b, 0x63, 0x76, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_cv_proto_rawDescOnce sync.Once
	file_cv_proto_rawDescData = file_cv_proto_rawDesc
)

func file_cv_proto_rawDescGZIP() []byte {
	file_cv_proto_rawDescOnce.Do(func() {
		file_cv_proto_rawDescData = protoimpl.X.CompressGZIP(file_cv_proto_rawDescData)
	})
	return file_cv_proto_rawDescData
}

var file_cv_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_cv_proto_goTypes = []any{
	(*CreateCVRequest)(nil),          // 0: cv.CreateCVRequest
	(*GetAllCVsByUserIDRequest)(nil), // 1: cv.GetAllCVsByUserIDRequest
	(*GetAllCVsResponse)(nil),        // 2: cv.GetAllCVsResponse
	(*GetCVByIDRequest)(nil),         // 3: cv.GetCVByIDRequest
	(*DeleteCVByIDRequest)(nil),      // 4: cv.DeleteCVByIDRequest
	(*DeleteCVByIDResponse)(nil),     // 5: cv.DeleteCVByIDResponse
	(*UpdateCVRequest)(nil),          // 6: cv.UpdateCVRequest
	(*CVResponse)(nil),               // 7: cv.CVResponse
	(*CV)(nil),                       // 8: cv.CV
	(*GetOriginalIDRequest)(nil),     // 9: cv.GetOriginalIDRequest
	(*GetOriginalIDResponse)(nil),    // 10: cv.GetOriginalIDResponse
}
var file_cv_proto_depIdxs = []int32{
	8,  // 0: cv.GetAllCVsResponse.cv_list:type_name -> cv.CV
	0,  // 1: cv.CVService.CreateCV:input_type -> cv.CreateCVRequest
	1,  // 2: cv.CVService.GetAllCVsByUserID:input_type -> cv.GetAllCVsByUserIDRequest
	3,  // 3: cv.CVService.GetCVByID:input_type -> cv.GetCVByIDRequest
	4,  // 4: cv.CVService.DeleteCVByID:input_type -> cv.DeleteCVByIDRequest
	6,  // 5: cv.CVService.UpdateCV:input_type -> cv.UpdateCVRequest
	9,  // 6: cv.CVService.GetOriginalID:input_type -> cv.GetOriginalIDRequest
	7,  // 7: cv.CVService.CreateCV:output_type -> cv.CVResponse
	2,  // 8: cv.CVService.GetAllCVsByUserID:output_type -> cv.GetAllCVsResponse
	7,  // 9: cv.CVService.GetCVByID:output_type -> cv.CVResponse
	5,  // 10: cv.CVService.DeleteCVByID:output_type -> cv.DeleteCVByIDResponse
	7,  // 11: cv.CVService.UpdateCV:output_type -> cv.CVResponse
	10, // 12: cv.CVService.GetOriginalID:output_type -> cv.GetOriginalIDResponse
	7,  // [7:13] is the sub-list for method output_type
	1,  // [1:7] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_cv_proto_init() }
func file_cv_proto_init() {
	if File_cv_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cv_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cv_proto_goTypes,
		DependencyIndexes: file_cv_proto_depIdxs,
		MessageInfos:      file_cv_proto_msgTypes,
	}.Build()
	File_cv_proto = out.File
	file_cv_proto_rawDesc = nil
	file_cv_proto_goTypes = nil
	file_cv_proto_depIdxs = nil
}
