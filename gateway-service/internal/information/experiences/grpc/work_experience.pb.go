// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v4.24.4
// source: proto/work_experience.proto

package experiences

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetExperiencesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CvId string `protobuf:"bytes,1,opt,name=cv_id,json=cvId,proto3" json:"cv_id,omitempty"`
}

func (x *GetExperiencesRequest) Reset() {
	*x = GetExperiencesRequest{}
	mi := &file_proto_work_experience_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetExperiencesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExperiencesRequest) ProtoMessage() {}

func (x *GetExperiencesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_work_experience_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExperiencesRequest.ProtoReflect.Descriptor instead.
func (*GetExperiencesRequest) Descriptor() ([]byte, []int) {
	return file_proto_work_experience_proto_rawDescGZIP(), []int{0}
}

func (x *GetExperiencesRequest) GetCvId() string {
	if x != nil {
		return x.CvId
	}
	return ""
}

type GetExperienceByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CvId string `protobuf:"bytes,2,opt,name=cv_id,json=cvId,proto3" json:"cv_id,omitempty"`
}

func (x *GetExperienceByIDRequest) Reset() {
	*x = GetExperienceByIDRequest{}
	mi := &file_proto_work_experience_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetExperienceByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExperienceByIDRequest) ProtoMessage() {}

func (x *GetExperienceByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_work_experience_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExperienceByIDRequest.ProtoReflect.Descriptor instead.
func (*GetExperienceByIDRequest) Descriptor() ([]byte, []int) {
	return file_proto_work_experience_proto_rawDescGZIP(), []int{1}
}

func (x *GetExperienceByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetExperienceByIDRequest) GetCvId() string {
	if x != nil {
		return x.CvId
	}
	return ""
}

type AllExperiencesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkExperiences []*ExperienceResponse `protobuf:"bytes,1,rep,name=work_experiences,json=workExperiences,proto3" json:"work_experiences,omitempty"`
}

func (x *AllExperiencesResponse) Reset() {
	*x = AllExperiencesResponse{}
	mi := &file_proto_work_experience_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AllExperiencesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllExperiencesResponse) ProtoMessage() {}

func (x *AllExperiencesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_work_experience_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllExperiencesResponse.ProtoReflect.Descriptor instead.
func (*AllExperiencesResponse) Descriptor() ([]byte, []int) {
	return file_proto_work_experience_proto_rawDescGZIP(), []int{2}
}

func (x *AllExperiencesResponse) GetWorkExperiences() []*ExperienceResponse {
	if x != nil {
		return x.WorkExperiences
	}
	return nil
}

type CreateExperienceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CvId        string  `protobuf:"bytes,1,opt,name=cv_id,json=cvId,proto3" json:"cv_id,omitempty"`
	Company     string  `protobuf:"bytes,2,opt,name=company,proto3" json:"company,omitempty"`
	Position    string  `protobuf:"bytes,3,opt,name=position,proto3" json:"position,omitempty"`
	StartDate   string  `protobuf:"bytes,4,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate     *string `protobuf:"bytes,5,opt,name=end_date,json=endDate,proto3,oneof" json:"end_date,omitempty"`
	Location    string  `protobuf:"bytes,6,opt,name=location,proto3" json:"location,omitempty"`
	Description string  `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *CreateExperienceRequest) Reset() {
	*x = CreateExperienceRequest{}
	mi := &file_proto_work_experience_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateExperienceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateExperienceRequest) ProtoMessage() {}

func (x *CreateExperienceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_work_experience_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateExperienceRequest.ProtoReflect.Descriptor instead.
func (*CreateExperienceRequest) Descriptor() ([]byte, []int) {
	return file_proto_work_experience_proto_rawDescGZIP(), []int{3}
}

func (x *CreateExperienceRequest) GetCvId() string {
	if x != nil {
		return x.CvId
	}
	return ""
}

func (x *CreateExperienceRequest) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

func (x *CreateExperienceRequest) GetPosition() string {
	if x != nil {
		return x.Position
	}
	return ""
}

func (x *CreateExperienceRequest) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *CreateExperienceRequest) GetEndDate() string {
	if x != nil && x.EndDate != nil {
		return *x.EndDate
	}
	return ""
}

func (x *CreateExperienceRequest) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *CreateExperienceRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type UpdateExperienceByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CvId        string  `protobuf:"bytes,2,opt,name=cv_id,json=cvId,proto3" json:"cv_id,omitempty"`
	Company     string  `protobuf:"bytes,3,opt,name=company,proto3" json:"company,omitempty"`
	Position    string  `protobuf:"bytes,4,opt,name=position,proto3" json:"position,omitempty"`
	StartDate   string  `protobuf:"bytes,5,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate     *string `protobuf:"bytes,6,opt,name=end_date,json=endDate,proto3,oneof" json:"end_date,omitempty"`
	Location    string  `protobuf:"bytes,7,opt,name=location,proto3" json:"location,omitempty"`
	Description string  `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *UpdateExperienceByIDRequest) Reset() {
	*x = UpdateExperienceByIDRequest{}
	mi := &file_proto_work_experience_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateExperienceByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateExperienceByIDRequest) ProtoMessage() {}

func (x *UpdateExperienceByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_work_experience_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateExperienceByIDRequest.ProtoReflect.Descriptor instead.
func (*UpdateExperienceByIDRequest) Descriptor() ([]byte, []int) {
	return file_proto_work_experience_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateExperienceByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateExperienceByIDRequest) GetCvId() string {
	if x != nil {
		return x.CvId
	}
	return ""
}

func (x *UpdateExperienceByIDRequest) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

func (x *UpdateExperienceByIDRequest) GetPosition() string {
	if x != nil {
		return x.Position
	}
	return ""
}

func (x *UpdateExperienceByIDRequest) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *UpdateExperienceByIDRequest) GetEndDate() string {
	if x != nil && x.EndDate != nil {
		return *x.EndDate
	}
	return ""
}

func (x *UpdateExperienceByIDRequest) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *UpdateExperienceByIDRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type DeleteExperienceByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CvId string `protobuf:"bytes,2,opt,name=cv_id,json=cvId,proto3" json:"cv_id,omitempty"`
}

func (x *DeleteExperienceByIDRequest) Reset() {
	*x = DeleteExperienceByIDRequest{}
	mi := &file_proto_work_experience_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteExperienceByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteExperienceByIDRequest) ProtoMessage() {}

func (x *DeleteExperienceByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_work_experience_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteExperienceByIDRequest.ProtoReflect.Descriptor instead.
func (*DeleteExperienceByIDRequest) Descriptor() ([]byte, []int) {
	return file_proto_work_experience_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteExperienceByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteExperienceByIDRequest) GetCvId() string {
	if x != nil {
		return x.CvId
	}
	return ""
}

type ExperienceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CvId        string  `protobuf:"bytes,2,opt,name=cv_id,json=cvId,proto3" json:"cv_id,omitempty"`
	Company     string  `protobuf:"bytes,3,opt,name=company,proto3" json:"company,omitempty"`
	Position    string  `protobuf:"bytes,4,opt,name=position,proto3" json:"position,omitempty"`
	StartDate   string  `protobuf:"bytes,5,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate     *string `protobuf:"bytes,6,opt,name=end_date,json=endDate,proto3,oneof" json:"end_date,omitempty"`
	Location    string  `protobuf:"bytes,7,opt,name=location,proto3" json:"location,omitempty"`
	Description string  `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
	CreatedAt   string  `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   string  `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *ExperienceResponse) Reset() {
	*x = ExperienceResponse{}
	mi := &file_proto_work_experience_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExperienceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExperienceResponse) ProtoMessage() {}

func (x *ExperienceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_work_experience_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExperienceResponse.ProtoReflect.Descriptor instead.
func (*ExperienceResponse) Descriptor() ([]byte, []int) {
	return file_proto_work_experience_proto_rawDescGZIP(), []int{6}
}

func (x *ExperienceResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ExperienceResponse) GetCvId() string {
	if x != nil {
		return x.CvId
	}
	return ""
}

func (x *ExperienceResponse) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

func (x *ExperienceResponse) GetPosition() string {
	if x != nil {
		return x.Position
	}
	return ""
}

func (x *ExperienceResponse) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *ExperienceResponse) GetEndDate() string {
	if x != nil && x.EndDate != nil {
		return *x.EndDate
	}
	return ""
}

func (x *ExperienceResponse) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *ExperienceResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ExperienceResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *ExperienceResponse) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type DeleteExperienceByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *DeleteExperienceByIDResponse) Reset() {
	*x = DeleteExperienceByIDResponse{}
	mi := &file_proto_work_experience_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteExperienceByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteExperienceByIDResponse) ProtoMessage() {}

func (x *DeleteExperienceByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_work_experience_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteExperienceByIDResponse.ProtoReflect.Descriptor instead.
func (*DeleteExperienceByIDResponse) Descriptor() ([]byte, []int) {
	return file_proto_work_experience_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteExperienceByIDResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_proto_work_experience_proto protoreflect.FileDescriptor

var file_proto_work_experience_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x65, 0x78, 0x70,
	0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x65,
	0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x22, 0x2c, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x13, 0x0a, 0x05, 0x63, 0x76, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x76, 0x49, 0x64, 0x22, 0x3f, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x45,
	0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x13, 0x0a, 0x05, 0x63, 0x76, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x76, 0x49, 0x64, 0x22, 0x64, 0x0a, 0x16, 0x41, 0x6c, 0x6c,
	0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x10, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x65, 0x78, 0x70, 0x65,
	0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x70, 0x65,
	0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0f,
	0x77, 0x6f, 0x72, 0x6b, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x22,
	0xee, 0x01, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69,
	0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x13, 0x0a, 0x05, 0x63,
	0x76, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x76, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61,
	0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x22, 0x82, 0x02, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x78, 0x70, 0x65, 0x72,
	0x69, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x13, 0x0a, 0x05, 0x63, 0x76, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x76, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x08, 0x65, 0x6e,
	0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07,
	0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x65, 0x6e, 0x64,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x22, 0x42, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45,
	0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x13, 0x0a, 0x05, 0x63, 0x76, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x76, 0x49, 0x64, 0x22, 0xb7, 0x02, 0x0a, 0x12, 0x45, 0x78,
	0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x13, 0x0a, 0x05, 0x63, 0x76, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x76, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x08, 0x65, 0x6e,
	0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07,
	0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x22, 0x38, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x78, 0x70,
	0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x32, 0xf7, 0x03,
	0x0a, 0x12, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x59, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x45, 0x78, 0x70, 0x65, 0x72,
	0x69, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x22, 0x2e, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65,
	0x6e, 0x63, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e,
	0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x65, 0x78, 0x70,
	0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x6c, 0x6c, 0x45, 0x78, 0x70, 0x65,
	0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x5b, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65,
	0x42, 0x79, 0x49, 0x44, 0x12, 0x25, 0x2e, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63,
	0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65,
	0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x65, 0x78,
	0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69,
	0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x10,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65,
	0x12, 0x24, 0x2e, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65,
	0x6e, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6b, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x79, 0x49, 0x44, 0x12,
	0x28, 0x2e, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x79,
	0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x65, 0x78, 0x70, 0x65,
	0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x78,
	0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x78,
	0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x79, 0x49, 0x44, 0x12, 0x28, 0x2e, 0x65,
	0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65,
	0x6e, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x35, 0x5a, 0x33, 0x2e, 0x2f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2f, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x2f, 0x67, 0x72,
	0x70, 0x63, 0x3b, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_work_experience_proto_rawDescOnce sync.Once
	file_proto_work_experience_proto_rawDescData = file_proto_work_experience_proto_rawDesc
)

func file_proto_work_experience_proto_rawDescGZIP() []byte {
	file_proto_work_experience_proto_rawDescOnce.Do(func() {
		file_proto_work_experience_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_work_experience_proto_rawDescData)
	})
	return file_proto_work_experience_proto_rawDescData
}

var file_proto_work_experience_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_proto_work_experience_proto_goTypes = []any{
	(*GetExperiencesRequest)(nil),        // 0: experiences.GetExperiencesRequest
	(*GetExperienceByIDRequest)(nil),     // 1: experiences.GetExperienceByIDRequest
	(*AllExperiencesResponse)(nil),       // 2: experiences.AllExperiencesResponse
	(*CreateExperienceRequest)(nil),      // 3: experiences.CreateExperienceRequest
	(*UpdateExperienceByIDRequest)(nil),  // 4: experiences.UpdateExperienceByIDRequest
	(*DeleteExperienceByIDRequest)(nil),  // 5: experiences.DeleteExperienceByIDRequest
	(*ExperienceResponse)(nil),           // 6: experiences.ExperienceResponse
	(*DeleteExperienceByIDResponse)(nil), // 7: experiences.DeleteExperienceByIDResponse
}
var file_proto_work_experience_proto_depIdxs = []int32{
	6, // 0: experiences.AllExperiencesResponse.work_experiences:type_name -> experiences.ExperienceResponse
	0, // 1: experiences.ExperiencesService.GetExperiences:input_type -> experiences.GetExperiencesRequest
	1, // 2: experiences.ExperiencesService.GetExperienceByID:input_type -> experiences.GetExperienceByIDRequest
	3, // 3: experiences.ExperiencesService.CreateExperience:input_type -> experiences.CreateExperienceRequest
	5, // 4: experiences.ExperiencesService.DeleteExperienceByID:input_type -> experiences.DeleteExperienceByIDRequest
	4, // 5: experiences.ExperiencesService.UpdateExperienceByID:input_type -> experiences.UpdateExperienceByIDRequest
	2, // 6: experiences.ExperiencesService.GetExperiences:output_type -> experiences.AllExperiencesResponse
	6, // 7: experiences.ExperiencesService.GetExperienceByID:output_type -> experiences.ExperienceResponse
	6, // 8: experiences.ExperiencesService.CreateExperience:output_type -> experiences.ExperienceResponse
	7, // 9: experiences.ExperiencesService.DeleteExperienceByID:output_type -> experiences.DeleteExperienceByIDResponse
	6, // 10: experiences.ExperiencesService.UpdateExperienceByID:output_type -> experiences.ExperienceResponse
	6, // [6:11] is the sub-list for method output_type
	1, // [1:6] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_proto_work_experience_proto_init() }
func file_proto_work_experience_proto_init() {
	if File_proto_work_experience_proto != nil {
		return
	}
	file_proto_work_experience_proto_msgTypes[3].OneofWrappers = []any{}
	file_proto_work_experience_proto_msgTypes[4].OneofWrappers = []any{}
	file_proto_work_experience_proto_msgTypes[6].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_work_experience_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_work_experience_proto_goTypes,
		DependencyIndexes: file_proto_work_experience_proto_depIdxs,
		MessageInfos:      file_proto_work_experience_proto_msgTypes,
	}.Build()
	File_proto_work_experience_proto = out.File
	file_proto_work_experience_proto_rawDesc = nil
	file_proto_work_experience_proto_goTypes = nil
	file_proto_work_experience_proto_depIdxs = nil
}
